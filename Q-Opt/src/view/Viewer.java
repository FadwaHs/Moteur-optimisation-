/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.CardLayout;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import model.bo.Noeud;

/**
 *
 * @author H4NANE
 */
public class Viewer extends javax.swing.JFrame {

    /**
     * Creates new form Viewer
     */
    public Viewer(List<Noeud> plans, List<List<Noeud>> phy_plans, List<String> desc) {
        initComponents();
        setLocationRelativeTo(null);
        getContentPane().setBackground(ViewUtilities._161819);
        this.plans = new ArrayList<Noeud>();
        this.plans = plans;
        this.phy_plans = new ArrayList<List<Noeud>>();
        this.phy_plans = phy_plans;
        this.desc = new ArrayList<String>();
        this.desc = desc;
        cl = new CardLayout();
        cardPanel.setLayout(cl);
        cl1 = new CardLayout();
        phyPanel.setLayout(cl1);
        first.setBackground(ViewUtilities._F85D81);
        first.setForeground(ViewUtilities._f0eff2);
        last.setBackground(ViewUtilities._F85D81);
        last.setForeground(ViewUtilities._f0eff2);
        previous.setBackground(ViewUtilities._5538DB);
        previous.setForeground(ViewUtilities._f0eff2);
        next.setBackground(ViewUtilities._5538DB);
        next.setForeground(ViewUtilities._f0eff2);
        
        pp_first.setBackground(ViewUtilities._F85D81);
        pp_first.setForeground(ViewUtilities._f0eff2);
        pp_last.setBackground(ViewUtilities._F85D81);
        pp_last.setForeground(ViewUtilities._f0eff2);
        pp_previous.setBackground(ViewUtilities._5538DB);
        pp_previous.setForeground(ViewUtilities._f0eff2);
        pp_next.setBackground(ViewUtilities._5538DB);
        pp_next.setForeground(ViewUtilities._f0eff2);
        desc_text_area.setText(desc.get(0));
        nbplan_lab.setText("[ Plan#" + 1 + "/" + this.plans.size() + "]");
        nb_p_plans.setText("[ Plan#" + 1 + "/" + phy_plans.get(0).size() + "]");
        cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(0).get(0).exec_Materialization())) + " ms");
        cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(0).get(0).exec_Pipeline(phy_plans.get(0).get(0).cout, 0))) + " ms");
        int i = 1;
        for (Noeud nd : plans) {
            Drawer D = new Drawer(nd);
            cardPanel.add(D, i++ + "");
        }

        int j = 1;
        for (Noeud phy_p : phy_plans.get(0)) {
            Drawer D2 = new Drawer(phy_p);
            phyPanel.add(D2, j++ + "");
        }
        
            cl.first(cardPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        cardPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        first = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        last = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        desc_lab = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        desc_text_area = new javax.swing.JTextArea();
        nbplan_lab = new javax.swing.JLabel();
        descPanel = new javax.swing.JPanel();
        phyPanel = new javax.swing.JPanel();
        cout_lab = new javax.swing.JLabel();
        cout_mat = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cout_pipe = new javax.swing.JLabel();
        pp_first = new javax.swing.JButton();
        pp_previous = new javax.swing.JButton();
        pp_next = new javax.swing.JButton();
        pp_last = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nb_p_plans = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transformer");
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(1800, 1024));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(22, 24, 25));
        jPanel2.setPreferredSize(new java.awt.Dimension(1020, 820));

        cardPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 826, Short.MAX_VALUE)
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(22, 24, 25));

        first.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        first.setText("First");
        first.setBorder(null);
        first.setPreferredSize(new java.awt.Dimension(100, 40));
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        previous.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        previous.setText("Previous");
        previous.setBorder(null);
        previous.setPreferredSize(new java.awt.Dimension(100, 40));
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        next.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        next.setText("Next");
        next.setBorder(null);
        next.setPreferredSize(new java.awt.Dimension(100, 40));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        last.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        last.setText("last");
        last.setBorder(null);
        last.setPreferredSize(new java.awt.Dimension(100, 40));
        last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(85, 56, 219));
        jLabel1.setText("Plan Logique");

        desc_lab.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        desc_lab.setForeground(new java.awt.Color(85, 56, 219));
        desc_lab.setText("Description: ");

        desc_text_area.setBackground(new java.awt.Color(35, 40, 40));
        desc_text_area.setColumns(20);
        desc_text_area.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        desc_text_area.setForeground(new java.awt.Color(240, 239, 242));
        desc_text_area.setRows(5);
        jScrollPane1.setViewportView(desc_text_area);

        nbplan_lab.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        nbplan_lab.setForeground(new java.awt.Color(41, 114, 109));
        nbplan_lab.setText("[/]");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nbplan_lab)
                                .addGap(22, 22, 22))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(desc_lab)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nbplan_lab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desc_lab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        descPanel.setBackground(new java.awt.Color(22, 24, 25));

        phyPanel.setPreferredSize(new java.awt.Dimension(540, 540));

        javax.swing.GroupLayout phyPanelLayout = new javax.swing.GroupLayout(phyPanel);
        phyPanel.setLayout(phyPanelLayout);
        phyPanelLayout.setHorizontalGroup(
            phyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        phyPanelLayout.setVerticalGroup(
            phyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 723, Short.MAX_VALUE)
        );

        cout_lab.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        cout_lab.setForeground(new java.awt.Color(240, 239, 242));
        cout_lab.setText("Cout Materialization:  ");

        cout_mat.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        cout_mat.setForeground(new java.awt.Color(41, 114, 109));
        cout_mat.setText("0.0 ms");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 239, 242));
        jLabel2.setText("Cout pipeline: ");

        cout_pipe.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        cout_pipe.setForeground(new java.awt.Color(41, 114, 109));
        cout_pipe.setText("0.0 ms");

        pp_first.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        pp_first.setBorder(null);
        pp_first.setLabel("first");
        pp_first.setPreferredSize(new java.awt.Dimension(100, 40));
        pp_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pp_firstActionPerformed(evt);
            }
        });

        pp_previous.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        pp_previous.setText("previous");
        pp_previous.setBorder(null);
        pp_previous.setPreferredSize(new java.awt.Dimension(100, 40));
        pp_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pp_previousActionPerformed(evt);
            }
        });

        pp_next.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        pp_next.setBorder(null);
        pp_next.setLabel("next");
        pp_next.setPreferredSize(new java.awt.Dimension(100, 40));
        pp_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pp_nextActionPerformed(evt);
            }
        });

        pp_last.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        pp_last.setText("last");
        pp_last.setBorder(null);
        pp_last.setPreferredSize(new java.awt.Dimension(100, 40));
        pp_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pp_lastActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(85, 56, 219));
        jLabel3.setText("Physical Plans");

        nb_p_plans.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        nb_p_plans.setForeground(new java.awt.Color(41, 114, 109));
        nb_p_plans.setText("[/]");

        javax.swing.GroupLayout descPanelLayout = new javax.swing.GroupLayout(descPanel);
        descPanel.setLayout(descPanelLayout);
        descPanelLayout.setHorizontalGroup(
            descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, descPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pp_first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pp_previous, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pp_next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pp_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(descPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                    .addGroup(descPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(descPanelLayout.createSequentialGroup()
                        .addComponent(cout_lab)
                        .addGap(18, 18, 18)
                        .addComponent(cout_mat)
                        .addGap(121, 121, 121)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cout_pipe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nb_p_plans)))
                .addContainerGap())
        );
        descPanelLayout.setVerticalGroup(
            descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(phyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cout_lab, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cout_mat)
                    .addComponent(jLabel2)
                    .addComponent(cout_pipe)
                    .addComponent(nb_p_plans))
                .addGap(72, 72, 72)
                .addGroup(descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pp_first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pp_previous, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pp_next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pp_last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );

        pp_first.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(descPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(descPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pp_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pp_firstActionPerformed
        cl1.first(phyPanel);
        curr2 = 1;
        nb_p_plans.setText("[ Plan#" + curr2 + "/" + phy_plans.get(curr - 1).size() + "]");
        cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
        cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
    }//GEN-LAST:event_pp_firstActionPerformed

    private void pp_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pp_nextActionPerformed
        if (curr2 < phy_plans.get(curr - 1).size()) {

            // increment the value of currentcard by 1
            curr2 += 1;

            // show the value of currentcard
            cl1.show(phyPanel, "" + (curr2));
            nb_p_plans.setText("[ Plan#" + curr2 + "/" + phy_plans.get(curr - 1).size() + "]");
            cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
            cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
        }
    }//GEN-LAST:event_pp_nextActionPerformed

    private void pp_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pp_previousActionPerformed
        if (curr2 > 1) {

            // increment the value of currentcard by 1
            curr2 -= 1;

            // show the value of currentcard
            cl1.show(phyPanel, "" + (curr2));
            nb_p_plans.setText("[ Plan#" + curr2 + "/" + phy_plans.get(curr - 1).size() + "]");
            cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
            cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
        }
    }//GEN-LAST:event_pp_previousActionPerformed

    private void pp_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pp_lastActionPerformed
        cl1.last(phyPanel);
        curr2 = phy_plans.get(curr - 1).size();
        nb_p_plans.setText("[ Plan#" + curr2 + "/" + phy_plans.get(curr - 1).size() + "]");
        cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
        cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
    }//GEN-LAST:event_pp_lastActionPerformed

    private void lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastActionPerformed
        cl.last(cardPanel);

        curr = plans.size();
        phyPanel.removeAll();
        curr2 = 1;
        int j = 1;
        for (Noeud phy_p : phy_plans.get(curr - 1)) {
            Drawer D2 = new Drawer(phy_p);
            phyPanel.add(D2, j++ + "");
        }
        cl1.first(phyPanel);
        desc_text_area.setText(desc.get(curr - 1));
        nbplan_lab.setText("[ Plan#" + curr + "/" + this.plans.size() + "]");
        cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
        cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
    }//GEN-LAST:event_lastActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed

        if (curr < plans.size()) {
            // increment the value of currentcard by 1
            curr += 1;
            phyPanel.removeAll();
            curr2 = 1;
            int j = 1;
            for (Noeud phy_p : phy_plans.get(curr-1)) {
                Drawer D2 = new Drawer(phy_p);
                phyPanel.add(D2, j++ + "");
            }
            cl.show(cardPanel, "" + (curr));
            cl1.first(phyPanel);
            // show the value of currentcard
            desc_text_area.setText(desc.get(curr - 1));
            nbplan_lab.setText("[ Plan#" + curr + "/" + this.plans.size() + "]");
            cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
            cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
        }
    }//GEN-LAST:event_nextActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        if (curr > 1) {

            // increment the value of currentcard by 1
            curr -= 1;

            // show the value of currentcard
            cl.show(cardPanel, "" + (curr));
            phyPanel.removeAll();
            curr2 = 1;
            int j = 1;
            for (Noeud phy_p : phy_plans.get(curr-1)) {
                Drawer D2 = new Drawer(phy_p);
                phyPanel.add(D2, j++ + "");
            }
            cl1.first(phyPanel);
            desc_text_area.setText(desc.get(curr - 1));
            nbplan_lab.setText("[ Plan#" + curr + "/" + this.plans.size() + "]");
            cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
            cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
        }
    }//GEN-LAST:event_previousActionPerformed

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        cl.first(cardPanel);
        curr = 1;
        phyPanel.removeAll();
        curr2 = 1;
        int j = 1;
        for (Noeud phy_p : phy_plans.get(curr - 1)) {
            Drawer D2 = new Drawer(phy_p);
            phyPanel.add(D2, j++ + "");
        }
        cl1.first(phyPanel);
        desc_text_area.setText(desc.get(curr - 1));
        nbplan_lab.setText("[ Plan#" + curr + "/" + this.plans.size() + "]");
        cout_pipe.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Pipeline(phy_plans.get(curr - 1).get(curr2 - 1).cout, 0))) + " ms");
        cout_mat.setText(String.valueOf(new DecimalFormat("#.###").format(phy_plans.get(curr - 1).get(curr2 - 1).exec_Materialization())) + " ms");
    }//GEN-LAST:event_firstActionPerformed

    /**
     * @param args the command line arguments
     */
    private int curr = 1;
    private int curr2 = 1;
    private List<Noeud> plans;
    private List<List<Noeud>> phy_plans;
    private List<String> desc;
    private CardLayout cl, cl1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel cout_lab;
    private javax.swing.JLabel cout_mat;
    private javax.swing.JLabel cout_pipe;
    private javax.swing.JPanel descPanel;
    private javax.swing.JLabel desc_lab;
    private javax.swing.JTextArea desc_text_area;
    private javax.swing.JButton first;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton last;
    private javax.swing.JLabel nb_p_plans;
    private javax.swing.JLabel nbplan_lab;
    private javax.swing.JButton next;
    private javax.swing.JPanel phyPanel;
    private javax.swing.JButton pp_first;
    private javax.swing.JButton pp_last;
    private javax.swing.JButton pp_next;
    private javax.swing.JButton pp_previous;
    private javax.swing.JButton previous;
    // End of variables declaration//GEN-END:variables
}
